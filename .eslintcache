[{"D:\\Projects\\cezarychojnowski\\cezarychojnowski\\src\\index.js":"1","D:\\Projects\\cezarychojnowski\\cezarychojnowski\\src\\reportWebVitals.js":"2","D:\\Projects\\cezarychojnowski\\cezarychojnowski\\src\\App.js":"3","D:\\Projects\\DevPortfolio-\\src\\index.js":"4","D:\\Projects\\DevPortfolio-\\src\\App.js":"5","D:\\Projects\\DevPortfolio-\\src\\reportWebVitals.js":"6","D:\\Projects\\DevPortfolio-\\src\\messages\\navBarMessage.js":"7","D:\\Projects\\DevPortfolio-\\src\\messages\\experienceMessage.js":"8","D:\\Projects\\DevPortfolio-\\src\\Contexts\\LanguageContext.js":"9","D:\\Projects\\DevPortfolio-\\src\\experience\\Experience.js":"10","D:\\Projects\\DevPortfolio-\\src\\Experience\\Experience.js":"11","D:\\Projects\\DevPortfolio-\\src\\messages\\exadelReference.js":"12","D:\\Projects\\DevPortfolio-\\src\\Projects\\Projects.js":"13","D:\\Projects\\DevPortfolio-\\src\\Projects\\Project.js":"14","D:\\Projects\\DevPortfolio-\\src\\messages\\projectMessage.js":"15","D:\\Projects\\DevPortfolio-\\src\\Skill\\Skills.js":"16","D:\\Projects\\DevPortfolio-\\src\\Skill\\Skill.js":"17","D:\\Projects\\DevPortfolio-\\src\\messages\\skillsMessage.js":"18","D:\\Projects\\DevPortfolio-\\src\\messages\\tempMessage.js":"19","D:\\Projects\\DevPortfolio-\\src\\About\\About.js":"20","D:\\Projects\\DevPortfolio-\\src\\Contact\\Contact.js":"21","D:\\Projects\\DevPortfolio-\\src\\Qalifications\\Qualifications.js":"22","D:\\Projects\\DevPortfolio-\\src\\Guestbook\\Guestbook.js":"23","D:\\Projects\\DevPortfolio-\\src\\Education\\Education.js":"24"},{"size":500,"mtime":1609967103630,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":1361,"mtime":1609971710333,"results":"28","hashOfConfig":"26"},{"size":500,"mtime":1609967103630,"results":"29","hashOfConfig":"30"},{"size":6083,"mtime":1620303233001,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"30"},{"size":755,"mtime":1619887430057,"results":"33","hashOfConfig":"30"},{"size":1499,"mtime":1619954361920,"results":"34","hashOfConfig":"30"},{"size":134,"mtime":1619953304975,"results":"35","hashOfConfig":"30"},{"size":2738,"mtime":1619901822514,"results":"36","hashOfConfig":"30"},{"size":6507,"mtime":1620244087417,"results":"37","hashOfConfig":"30"},{"size":595,"mtime":1620152080522,"results":"38","hashOfConfig":"30"},{"size":3230,"mtime":1620244142123,"results":"39","hashOfConfig":"30"},{"size":3844,"mtime":1620244636297,"results":"40","hashOfConfig":"30"},{"size":3998,"mtime":1620240417412,"results":"41","hashOfConfig":"30"},{"size":1745,"mtime":1620299769171,"results":"42","hashOfConfig":"30"},{"size":2321,"mtime":1620299898651,"results":"43","hashOfConfig":"30"},{"size":1290,"mtime":1620298728872,"results":"44","hashOfConfig":"30"},{"size":128,"mtime":1620302888684,"results":"45","hashOfConfig":"30"},{"size":412,"mtime":1620303670889,"results":"46","hashOfConfig":"30"},{"size":355,"mtime":1620302897306,"results":"47","hashOfConfig":"30"},{"size":369,"mtime":1620302919074,"results":"48","hashOfConfig":"30"},{"size":360,"mtime":1620302916282,"results":"49","hashOfConfig":"30"},{"size":360,"mtime":1620302912530,"results":"50","hashOfConfig":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"1limm0n",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"17fbd72",{"filePath":"61","messages":"62","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\cezarychojnowski\\cezarychojnowski\\src\\index.js",[],["104","105"],"D:\\Projects\\cezarychojnowski\\cezarychojnowski\\src\\reportWebVitals.js",[],"D:\\Projects\\cezarychojnowski\\cezarychojnowski\\src\\App.js",[],"D:\\Projects\\DevPortfolio-\\src\\index.js",[],["106","107"],"D:\\Projects\\DevPortfolio-\\src\\App.js",["108","109","110","111","112","113","114","115"],"D:\\Projects\\DevPortfolio-\\src\\reportWebVitals.js",[],"D:\\Projects\\DevPortfolio-\\src\\messages\\navBarMessage.js",[],"D:\\Projects\\DevPortfolio-\\src\\messages\\experienceMessage.js",[],"D:\\Projects\\DevPortfolio-\\src\\Contexts\\LanguageContext.js",[],"D:\\Projects\\DevPortfolio-\\src\\experience\\Experience.js",["116","117"],"D:\\Projects\\DevPortfolio-\\src\\Experience\\Experience.js",["118","119"],"import React, { useContext } from \"react\";\r\nimport './experience.css';\r\nimport {message} from '../messages/experienceMessage.js'\r\nimport {exadelReferenceMessages} from '../messages/exadelReference.js'\r\nimport { LanguageContext } from '../Contexts/LanguageContext'\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport PdfCV from '../randomPDF_Reference.pdf';\r\n\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nfunction Experience() {\r\n    const {language, setLanguage} = useContext(LanguageContext)\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    const handleCloseDialog = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    return (\r\n      <div classname=\"experienceContent\">\r\n      <div className=\"experience\">\r\n        <div className=\"companyInfo\">\r\n          <div className=\"companyLogo\">\r\n          <img src=\"/exadel.png\" alt=\"Home\" width=\"100\" height=\"100\"/>\r\n          </div>\r\n          <div className=\"company\">\r\n            <span id=\"company\">{message.staticExadel.companyName}</span>\r\n          </div>\r\n          <div className=\"location\">\r\n          <span id=\"location\">{message.staticExadel.companyLocation}, {message[language].countryPoland}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"title\">\r\n        <span id=\"title\">{message.staticExadel.titleExadel}</span>\r\n        </div>\r\n        <div className=\"dates\">\r\n          <span id=\"dates\">{message.staticExadel.workRangeDate}</span><br></br>\r\n          <span id=\"dates\">{message[language].jobTimeExadel}</span>\r\n        </div>\r\n        <div className=\"responsibilities\">\r\n          <span id=\"responsibilities\">{message[language].responsibilitiesExadel}</span>\r\n        </div>\r\n        <div className=\"stack\">\r\n          <span id=\"stack\">{message.staticExadel.technologyStack}</span>\r\n        </div>\r\n        <div className=\"reference\">\r\n          <span id=\"referenceButton\">\r\n        <Button onClick={handleClick} style={{ backgroundColor: '#111845a6', color: 'white', border:'1px solid white'}}>\r\n        {exadelReferenceMessages[language].reference}\r\n      </Button></span>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n      <MenuItem onClick={handleClickOpen}>{exadelReferenceMessages[language].digitalVersion}</MenuItem>\r\n      <Dialog onClose={() => {handleCloseDialog(); handleClose()}} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={() => {handleCloseDialog(); handleClose()}}>\r\n        {exadelReferenceMessages[language].person} - {exadelReferenceMessages[language].titlePerson}\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Typography gutterBottom>\r\n          {exadelReferenceMessages[language].referenceContent} {exadelReferenceMessages[language].referenceContent} {exadelReferenceMessages[language].referenceContent}\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={() => language == \"PL\" ? setLanguage(\"EN\") : setLanguage(\"PL\")} color=\"primary\">\r\n          {language == \"EN\" ? <img src=\"/PL.png\" alt=\"Home\" width=\"30\" height=\"20\" /> : <img src=\"/EN.png\" alt=\"Home\" width=\"30\" height=\"20\" />}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <MenuItem component='a' href={PdfCV} target=\"_blank\">{exadelReferenceMessages[language].originalDocument}</MenuItem>\r\n\r\n      </Menu>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div className=\"experience\">\r\n        <div className=\"companyInfo\">\r\n          <div className=\"companyLogo\">\r\n          <img src=\"/nordcom.jpg\" alt=\"Home\" width=\"85\" height=\"85\"/>\r\n          </div>\r\n          <div className=\"company\">\r\n            <span id=\"company\">{message.staticNordCom.companyName}</span>\r\n          </div>\r\n          <div className=\"location\">\r\n          <span id=\"location\">{message.staticNordCom.companyLocation}, {message[language].countryPoland}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"title\">\r\n        <span id=\"title\">{message[language].titleNordCom}</span>\r\n        </div>\r\n        <div className=\"dates\">\r\n          <span id=\"dates\">{message.staticNordCom.workRangeDate}</span><br></br>\r\n          <span id=\"dates\">{message[language].jobTimeNordCom}</span>\r\n        </div>\r\n        <div className=\"responsibilities\">\r\n          <span id=\"responsibilities\">{message[language].responsibilitiesNordcom}</span>\r\n        </div>\r\n        {/* <div className=\"stack\">\r\n          <span id=\"stack\"></span>\r\n        </div>\r\n        <div className=\"reference\">\r\n        <p></p>\r\n        </div> */}\r\n      </div>\r\n\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Experience;","D:\\Projects\\DevPortfolio-\\src\\messages\\exadelReference.js",[],"D:\\Projects\\DevPortfolio-\\src\\Projects\\Projects.js",[],"D:\\Projects\\DevPortfolio-\\src\\Projects\\Project.js",["120","121"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport './projects.css';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        marginLeft: 0,\r\n        width: 450,\r\n        height: 350,\r\n        marginBottom: 60,\r\n        maxHeight: 700,\r\n        backgroundColor: '#111845a6',\r\n        border: '2px solid #2a3cad',\r\n        boxShadow: '0 20px 50px rgb(23, 32, 90)',\r\n        color: 'white'\r\n    },\r\n    subheader: {\r\n        borderTop: '2px solid white',\r\n        color: 'white',\r\n        fontSize: 15\r\n    },\r\n    iconButtonGithub: {\r\n        color: '#fafafa',\r\n    },\r\n    iconButtonYoutube: {\r\n        color: 'red',\r\n    },\r\n    buttons: {\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        left: 0\r\n    },\r\n    cardHeader: {\r\n        marginBottom:10,\r\n        fontSize: 25\r\n    }\r\n}));\r\n\r\nfunction Project(props) {\r\n    const classes = useStyles();\r\n    const [hoverButtonGithub, setHoverButtonGithub] = useState('none');\r\n    const [hoverButtonYoutube, setHoverButtonYoutube] = useState('none');\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card className={classes.root} style={{ position: 'relative' }}>\r\n                <CardHeader\r\n                    title={<Typography className={classes.cardHeader}>{props.title}</Typography>}\r\n                    subheader={<Typography className={classes.subheader}>{props.techstack}</Typography>}\r\n                />\r\n                <CardContent>\r\n                    <Typography >\r\n                        {props.content}\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions className={classes.buttons}>\r\n                    {props.github != undefined && Boolean(props.github) &&\r\n                        <IconButton\r\n                            onMouseEnter={() => setHoverButtonGithub('2px solid white')}\r\n                            onMouseLeave={() => setHoverButtonGithub('none')}\r\n                            title=\"Add\"\r\n                            className={classes.iconButtonGithub}\r\n                            style={{\r\n                                border: hoverButtonGithub\r\n                            }}\r\n                        >\r\n                            <GitHubIcon\r\n                                onClick={() => window.open(props.github)}\r\n                                style={{ fontSize: 30 }}\r\n                            />\r\n                        </IconButton>\r\n                    }\r\n                    {props.youtube != undefined && Boolean(props.youtube) &&\r\n                        <IconButton\r\n                            onMouseEnter={() => setHoverButtonYoutube('2px solid red')}\r\n                            onMouseLeave={() => setHoverButtonYoutube('none')}\r\n                            title=\"Add\"\r\n                            className={classes.iconButtonYoutube}\r\n                            style={{\r\n                                border: hoverButtonYoutube\r\n                            }}\r\n                        >\r\n                            <YouTubeIcon\r\n                                onClick={() => window.open(props.youtube)}\r\n                                style={{ fontSize: 30 }}\r\n                            />\r\n                        </IconButton>\r\n                    }\r\n                </CardActions>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Project;","D:\\Projects\\DevPortfolio-\\src\\messages\\projectMessage.js",[],"D:\\Projects\\DevPortfolio-\\src\\Skill\\Skills.js",[],"D:\\Projects\\DevPortfolio-\\src\\Skill\\Skill.js",["122"],"import React from \"react\";\r\nimport './skills.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './skills.css';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        backgroundColor: '#111845a6',\r\n        border: '2px solid #2a3cad',\r\n        boxShadow: '0 20px 50px rgb(23, 32, 90)',\r\n        color: 'white',\r\n        marginBottom: 40\r\n    },\r\n    cardHeader: {\r\n        fontSize: 20,\r\n        marginLeft: 10\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    grid: {\r\n        marginLeft: 20,\r\n        marginRight: 15,\r\n        textAlign: 'center'\r\n    }\r\n});\r\n\r\nfunction Skill(props) {\r\n    const classes = useStyles();\r\n    var firstTechnologyImg = \"/\" + props.firstTechnology + \".png\"\r\n    var secondTechnologyImg = \"/\" + props.secondTechnology + \".png\"\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardHeader\r\n                    title={<Typography className={classes.cardHeader}>{props.skillsType}</Typography>}\r\n                />\r\n                <CardContent>\r\n                    <Grid>\r\n                        <Grid container item xs={12}>\r\n                            <Grid item xs={2} className={classes.grid} >\r\n                                <img className=\"image\" src={firstTechnologyImg} alt=\"Home\" width=\"75\" height=\"75\" />\r\n                                <div className=\"technology\">{props.firstTechnology}</div>\r\n                            </Grid>\r\n                            {props.secondTechnology != undefined && Boolean(props.secondTechnology) &&\r\n                                <Grid item xs={2} className={classes.grid}>\r\n                                    <img src={secondTechnologyImg} alt=\"Home\" width=\"75\" height=\"75\" />\r\n                                    <div className=\"technology\">{props.secondTechnology}</div>\r\n                                </Grid>\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Skill;","D:\\Projects\\DevPortfolio-\\src\\messages\\skillsMessage.js",[],"D:\\Projects\\DevPortfolio-\\src\\messages\\tempMessage.js",[],"D:\\Projects\\DevPortfolio-\\src\\About\\About.js",["123"],"D:\\Projects\\DevPortfolio-\\src\\Contact\\Contact.js",[],"D:\\Projects\\DevPortfolio-\\src\\Qalifications\\Qualifications.js",[],"D:\\Projects\\DevPortfolio-\\src\\Guestbook\\Guestbook.js",[],"D:\\Projects\\DevPortfolio-\\src\\Education\\Education.js",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"124","replacedBy":"128"},{"ruleId":"126","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":47,"column":9,"nodeType":"132","messageId":"133","endLine":47,"endColumn":14},{"ruleId":"134","severity":1,"message":"135","line":50,"column":14,"nodeType":"136","messageId":"137","endLine":50,"endColumn":16},{"ruleId":"138","severity":1,"message":"139","line":53,"column":3,"nodeType":"132","endLine":53,"endColumn":12,"suggestions":"140"},{"ruleId":"134","severity":1,"message":"135","line":56,"column":19,"nodeType":"136","messageId":"137","endLine":56,"endColumn":21},{"ruleId":"134","severity":1,"message":"135","line":76,"column":21,"nodeType":"136","messageId":"137","endLine":76,"endColumn":23},{"ruleId":"141","severity":1,"message":"142","line":122,"column":13,"nodeType":"143","endLine":122,"endColumn":76},{"ruleId":"141","severity":1,"message":"142","line":141,"column":13,"nodeType":"143","endLine":141,"endColumn":106},{"ruleId":"141","severity":1,"message":"142","line":147,"column":13,"nodeType":"143","endLine":147,"endColumn":127},{"ruleId":"130","severity":1,"message":"144","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":26},{"ruleId":"130","severity":1,"message":"145","line":1,"column":40,"nodeType":"132","messageId":"133","endLine":1,"endColumn":51},{"ruleId":"134","severity":1,"message":"135","line":133,"column":53,"nodeType":"136","messageId":"137","endLine":133,"endColumn":55},{"ruleId":"134","severity":1,"message":"135","line":134,"column":21,"nodeType":"136","messageId":"137","endLine":134,"endColumn":23},{"ruleId":"134","severity":1,"message":"146","line":68,"column":35,"nodeType":"136","messageId":"137","endLine":68,"endColumn":37},{"ruleId":"134","severity":1,"message":"146","line":84,"column":36,"nodeType":"136","messageId":"137","endLine":84,"endColumn":38},{"ruleId":"134","severity":1,"message":"146","line":50,"column":53,"nodeType":"136","messageId":"137","endLine":50,"endColumn":55},{"ruleId":"134","severity":1,"message":"146","line":9,"column":17,"nodeType":"136","messageId":"137","endLine":9,"endColumn":19},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],["147"],["148"],"no-unused-vars","'value' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setHiddenMain'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [hiddenMain, seconds] as a second argument to the useEffect Hook.",["149"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'Component' is defined but never used.","'userContext' is defined but never used.","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},"Add dependencies array: [hiddenMain, seconds]",{"range":"152","text":"153"},[1509,1509],", [hiddenMain, seconds]"]